generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model AUDITORIUM {
  AUDITORIUM                                                  String          @id(map: "PK__AUDITORI__53726010E1F60F15") @db.Char(10)
  AUDITORIUM_NAME                                             String?         @db.VarChar(200)
  AUDITORIUM_CAPACITY                                         Int?
  AUDITORIUM_TYPE                                             String          @db.Char(10)
  AUDITORIUM_TYPE_AUDITORIUM_AUDITORIUM_TYPEToAUDITORIUM_TYPE AUDITORIUM_TYPE @relation("AUDITORIUM_AUDITORIUM_TYPEToAUDITORIUM_TYPE", fields: [AUDITORIUM_TYPE], references: [AUDITORIUM_TYPE], onUpdate: NoAction, map: "FK__AUDITORIU__AUDIT__31EC6D26")
}

model AUDITORIUM_TYPE {
  AUDITORIUM_TYPE                                        String       @id(map: "AUDITORIUM_TYPE_PK") @db.Char(10)
  AUDITORIUM_TYPENAME                                    String       @db.VarChar(30)
  AUDITORIUM_AUDITORIUM_AUDITORIUM_TYPEToAUDITORIUM_TYPE AUDITORIUM[] @relation("AUDITORIUM_AUDITORIUM_TYPEToAUDITORIUM_TYPE")
}

model FACULTY {
  FACULTY                        String   @id(map: "PK_FACULTY") @db.Char(10)
  FACULTY_NAME                   String?  @db.VarChar(50)
  PULPIT_PULPIT_FACULTYToFACULTY PULPIT[] @relation("PULPIT_FACULTYToFACULTY")
}

model PULPIT {
  PULPIT                          String    @id(map: "PK_PULPIT") @db.Char(10)
  PULPIT_NAME                     String?   @db.VarChar(100)
  FACULTY                         String    @db.Char(10)
  FACULTY_PULPIT_FACULTYToFACULTY FACULTY   @relation("PULPIT_FACULTYToFACULTY", fields: [FACULTY], references: [FACULTY], onUpdate: NoAction, map: "FK_PULPIT_FACULTY")
  SUBJECT_SUBJECT_PULPITToPULPIT  SUBJECT[] @relation("SUBJECT_PULPITToPULPIT")
  TEACHER_TEACHER_PULPITToPULPIT  TEACHER[] @relation("TEACHER_PULPITToPULPIT")
}

model SUBJECT {
  SUBJECT                       String @id(map: "PK_SUBJECT") @db.Char(10)
  SUBJECT_NAME                  String @db.VarChar(50)
  PULPIT                        String @db.Char(10)
  PULPIT_SUBJECT_PULPITToPULPIT PULPIT @relation("SUBJECT_PULPITToPULPIT", fields: [PULPIT], references: [PULPIT], onUpdate: NoAction, map: "FK_SUBJECT_PULPIT")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61618FBBD4") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model TEACHER {
  TEACHER                       String  @id(map: "PK_TEACHER") @db.Char(10)
  TEACHER_NAME                  String? @db.VarChar(50)
  PULPIT                        String  @db.Char(10)
  PULPIT_TEACHER_PULPITToPULPIT PULPIT  @relation("TEACHER_PULPITToPULPIT", fields: [PULPIT], references: [PULPIT], onUpdate: NoAction, map: "FK_TEACHER_PULPIT")
}
