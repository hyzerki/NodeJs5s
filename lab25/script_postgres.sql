CREATE TABLE IF NOT EXISTS users (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY,
  username VARCHAR(16) NOT NULL,
  email VARCHAR(255) NULL,
  password VARCHAR(32) NOT NULL,
  role VARCHAR(5) NOT NULL,
  PRIMARY KEY (id));

CREATE TABLE IF NOT EXISTS repos (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(255) NULL DEFAULT NULL,
  authorId INT NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_repos_users
    FOREIGN KEY (authorId)
    REFERENCES users (id)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS commits (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY,
  repoId INT NULL DEFAULT NULL,
  message VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_commits_repos
    FOREIGN KEY (repoId)
    REFERENCES repos (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
    
CREATE OR REPLACE FUNCTION trig_check_func() RETURNS TRIGGER AS $check$  
    BEGIN 
		IF (NEW.role NOT IN ('usr', 'admin')) THEN 
			NEW.role := 'user';
		END IF;
		RETURN NEW;
	END;
$check$ LANGUAGE plpgsql;

CREATE TRIGGER trig_check BEFORE INSERT ON users 
	FOR EACH ROW
EXECUTE FUNCTION trig_check_func(); 

